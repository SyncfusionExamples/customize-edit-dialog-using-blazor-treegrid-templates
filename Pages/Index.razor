@page "/"
@using Syncfusion.Blazor.Grids;
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Buttons
<style>
    .form-group.col-md-6 {
        width: 200px;
    }

        .form-group.col-md-6.e-chk {
            padding: 7%;
        }
</style>
<SfTreeGrid DataSource="@TreeData" IdMapping="TaskId" ParentIdMapping="ParentId" TreeColumnIndex="1"
            Toolbar="@(new List<string>() {"Add", "Edit", "Delete", "Update", "Cancel"})">
    <TreeGridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"
                          Mode="Syncfusion.Blazor.TreeGrid.EditMode.Dialog">
        <Template>
            @{
                var Task = (context as BusinessObject);
                <div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <SfNumericTextBox @bind-Value="@(Task.TaskId)" Enabled="@(Task.TaskId == 0 ? true : false)"
                                          Placeholder="Task ID" FloatLabelType="FloatLabelType.Always" TValue="int"></SfNumericTextBox>
                        </div>
                        <div class="form-group col-md-6">
                            <SfAutoComplete DataSource="@TreeData" TItem="BusinessObject" TValue="string"
                                            @bind-Value="@(Task.TaskName)" Placeholder="Task Name" FloatLabelType="FloatLabelType.Always">
                                <AutoCompleteFieldSettings Value="TaskName"></AutoCompleteFieldSettings>
                            </SfAutoComplete>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <SfDatePicker TValue="DateTime?" @bind-Value="@(Task.StartDate)"
                                      Placeholder="Start date" FloatLabelType="FloatLabelType.Always"></SfDatePicker>
                        </div>
                        <div class="form-group col-md-6">
                            <SfNumericTextBox @bind-Value="@(Task.Progress)" TValue="int"
                                          Placeholder="Progress" FloatLabelType="FloatLabelType.Always"></SfNumericTextBox>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <SfDropDownList DataSource="@priorityData" TItem="DropDownData" TValue="string"
                                            @bind-Value="@(Task.Priority)" Placeholder="Priority" FloatLabelType="FloatLabelType.Always">
                                <DropDownListFieldSettings Value="Priority" Text="Priority"></DropDownListFieldSettings>
                            </SfDropDownList>
                        </div>
                        <div class="form-group col-md-6 e-chk">
                            <SfCheckBox @bind-Checked="@(Task.Approved)" Label="Approved" LabelPosition="Syncfusion.Blazor.Buttons.LabelPosition.After"></SfCheckBox>
                        </div>
                    </div>
                </div>
            }
        </Template>
    </TreeGridEditSettings>
    <TreeGridColumns>
        <TreeGridColumn Field="TaskId" HeaderText="Task ID" TextAlign="TextAlign.Right" IsPrimaryKey="true"></TreeGridColumn>
        <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="200"></TreeGridColumn>
        <TreeGridColumn Field="StartDate" HeaderText="Start Date" Format="dd-MMM-yyyy"></TreeGridColumn>
        <TreeGridColumn Field="Duration" HeaderText="Duration" TextAlign="TextAlign.Right"></TreeGridColumn>
        <TreeGridColumn Field="Progress" HeaderText="Progress" TextAlign="TextAlign.Right"></TreeGridColumn>
        <TreeGridColumn Field="Priority" HeaderText="Priority"></TreeGridColumn>
    </TreeGridColumns>
</SfTreeGrid>

@code {

    public class BusinessObject
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public int Duration { get; set; }
        public DateTime? StartDate { get; set; }
        public int Progress { get; set; }
        public string Priority { get; set; }
        public int? ParentId { get; set; }
        public bool? Approved { get; set; }
    }

    public class DropDownData
    {
        public int TaskId { get; set; }
        public string Priority { get; set; }
    }

    public List<BusinessObject> TreeData = new List<BusinessObject>();

    public List<DropDownData> priorityData = new List<DropDownData>();

    protected override void OnInitialized()
    {
        TreeData.Add(new BusinessObject() { TaskId = 1, TaskName = "Parent Task 1", Duration = 10, Progress = 70, ParentId = null, Priority = "High", StartDate = DateTime.Now.AddDays(-10), Approved = false });
        TreeData.Add(new BusinessObject() { TaskId = 2, TaskName = "Child task 1", Duration = 4, Progress = 80, ParentId = 1, Priority = "Normal", StartDate = DateTime.Now.AddDays(-8), Approved = true, });
        TreeData.Add(new BusinessObject() { TaskId = 3, TaskName = "Child Task 2", Duration = 5, Progress = 65, ParentId = 1, Priority = "Critical", StartDate = DateTime.Now.AddDays(-1), Approved = true, });
        TreeData.Add(new BusinessObject() { TaskId = 4, TaskName = "Parent Task 2", Duration = 6, Progress = 77, ParentId = null, Priority = "Low", Approved = true, StartDate = DateTime.Now.AddDays(-20) });
        TreeData.Add(new BusinessObject() { TaskId = 5, TaskName = "Child Task 5", Duration = 9, Progress = 25, ParentId = 4, Priority = "Normal", StartDate = DateTime.Now.AddDays(-7), Approved = false });
        TreeData.Add(new BusinessObject() { TaskId = 6, TaskName = "Child Task 6", Duration = 9, Progress = 7, ParentId = 5, Priority = "Normal", StartDate = DateTime.Now.AddDays(-35), Approved = true, });
        TreeData.Add(new BusinessObject() { TaskId = 7, TaskName = "Parent Task 3", Duration = 4, Progress = 45, ParentId = null, Priority = "High", StartDate = DateTime.Now.AddDays(-3), Approved = false });
        TreeData.Add(new BusinessObject() { TaskId = 8, TaskName = "Child Task 7", Duration = 3, Progress = 38, ParentId = 7, Priority = "Critical", StartDate = DateTime.Now.AddDays(-1), Approved = true, });
        TreeData.Add(new BusinessObject() { TaskId = 9, TaskName = "Child Task 8", Duration = 7, Progress = 70, ParentId = 7, Priority = "Low", StartDate = DateTime.Now.AddDays(-5), Approved = true, });

        priorityData = TreeData.Select(rec => rec.Priority).Distinct().Select((priority, index) => new DropDownData()
            {
                TaskId = index,
                Priority = priority
            }).ToList();
    }
}
